#In the following vector L, the member value is TRUE
#if the car has automatic transmission, and FALSE if otherwise.
#L = mtcars$am == 0
#L
#[1]   FALSE FALSE FALSE  TRUE ...
#Here is the list of vehicles with automatic transmission.
L = mtcars$cyl >=8
L
mtcars(L)
mtcars[L,]
print(paste(i, 'is a gas guzzler'))
mtcars[L,]
print(paste(car, 'is a gas guzzler')
}
print(paste(car, 'is a gas guzzler')
}
for (car in mtcars[L,]) {
}
print(paste(car, 'is a gas guzzler'))
print(paste(car[L], 'is a gas guzzler'))
print(paste(car[L,1], 'is a gas guzzler'))
print(paste(car[1], 'is a gas guzzler'))
print(paste(car, 'is a gas guzzler'))
mtcars[L,]
print(paste(names(car), 'is a gas guzzler'))
mtcars[L,]
print(paste(names(mtcars[L,]), 'is a gas guzzler'))
print(paste(car, 'is a gas guzzler'))
mtcars[L,]
rownames(mtcars[L,])
print(paste(car, 'is a gas guzzler'))
print(paste(rownames(mtcars[L,], 'is a gas guzzler'))
}
print(paste(rownames(mtcars[L,]), 'is a gas guzzler'))
print(car, paste(rownames(mtcars[L,]), 'is a gas guzzler'))
print(paste(car, rownames(mtcars[L,]), 'is a gas guzzler'))
print(paste(i, rownames(mtcars[L,]), 'is a gas guzzler'))
print(paste(rownames(mtcars[L,]), 'is a gas guzzler'))
install.packages('tidyverse')
#the dplyr and magrittr libraries.
library(dplyr)
library(magrittr)
head(starwars)
distinct(starwars,homeworlds)
distinct(starwars, homeworlds)
distinct(starwars, homeworld)
homeworlds<-starwars %>%
filter(!is.na(homeworld)) %>%
group_by(homeworld) %>%
summarise(Count = n())
homeworlds<-starwars %>%
filter(!is.na(homeworld)) %>%
group_by(homeworld) %>%
summarise(count = n())
homeworlds <-
starwars #%>%
homeworlds <-
starwars %>%
filter(!is.na(homeworld)) #%>%
#
homeworlds
homeworlds <-
starwars %>%
filter(!is.na(homeworld)) #%>%
homeworlds
summarise(count = n())
homeworlds
summarise(Count = n())
homeworlds <-
starwars %>%
filter(!is.na(homeworld)) %>%
group_by(homeworld) %>%
summarise(Count = n())
homeworlds
homeworlds %>%
filter(Count > 1) %>%
ggplot(aes(reorder(homeworld, Count), Count)) +
geom_col(fill = "darkblue") +
scale_y_continuous(breaks = seq(0,12,2)) +
theme(axis.text.x = element_text(angle = 90,
hjust = 1) ) +
xlab('Home World') +
ggtitle("Homeworlds of Star Wars Characters")
library("ggplot2")
homeworlds %>%
filter(Count > 1) %>%
ggplot(aes(reorder(homeworld, Count), Count)) +
geom_col(fill = "darkblue") +
scale_y_continuous(breaks = seq(0,12,2)) +
theme(axis.text.x = element_text(angle = 90,
hjust = 1) ) +
xlab('Home World') +
ggtitle("Homeworlds of Star Wars Characters")
starwars %>%
ggplot(aes(mass,height,label=name)) +
geom_text(size=3, check_overlap = TRUE, aes(color=gender))
starwars %>%
mutate(mass2 = mass * 2.2) %>%
mutate(height2 = height * 0.393701) %>%
ggplot(aes(mass2, height2, label=name)) +
geom_text(size=3,
check_overlap = TRUE, aes(color=gender)) +
xlab("weight(pounds)") +
ylab("height(inches)")
install.packages("swirl")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(swirl)
?swirl
swirl()
swirl()
1
0
swirl()
swirl()
0
q
pwd
ls
swirl()
0
0
swirl()
library(swirl)
ls()
rm(list = ls())
swirl()
which_course
?which_course
??which_course
q
ls
install_course("Introduction to Statistical Inference")
detach("package:swirl", unload=TRUE)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
swirl()
install_course("Introduction to Statistical Inference")
swirl()
swirl()
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
swirl()
swirl()
remove.packages("swirl")
install.packages("swirl")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
swirl()
0
info()
33/36
deck
1/52
52
4/52
3/52
0
12/52
4/51
2/51
2
0.75
1
0.64
64%
64
60
80
64/100
mypdf
?mypdf
??mypdf
nxt
integrate(mypdf,0,1.6)
50
4
2
nxt
2
1
4
5
2
nxt
2
1
3
4
5
6
7
8
0.5
20
2
2.1
nxt
8
9
10
12
24
2
1
3
4
5
6
7
8
9
10
11
12
13
14
15
1.414214
setwd(‘/Users/vinaykhedkar/GIT/data-question-4-skirmish-guards-1/data’)
?setwd
setwd("/Users/vinaykhedkar/GIT/data-question-4-skirmish-guards-1/data")
library(“tidyverse”)
setwd("/Users/vinaykhedkar/GIT/data-question-4-skirmish-guards-1/data")
library("tidyverse")
library("dplyr")
library("magrittr")
setwd("/Users/vinaykhedkar/GIT/data-question-4-skirmish-guards-1/data")
library("tidyverse")
library("dplyr")
library("magrittr")
library("ggplot2")
# install.packages(“readxl”)
library("readxl")
tn_2011 <- read_xls("data/2011tn.xls", range = cell_rows(3:4724))
tn_2011 <- read_xls("data/2011tn.xls", range = cell_rows(3:4724))
setwd("/Users/vinaykhedkar/GIT/data-question-4-skirmish-guards-1")
library("tidyverse")
library("dplyr")
library("magrittr")
library("ggplot2")
# install.packages(“readxl”)
library("readxl")
tn_2011 <- read_xls("data/2011tn.xls", range = cell_rows(3:4724))
tn_2011 <- tn_2011[4:4724,]
View(tn_2011)
tn_2011_df <- select(tn_2011,`[Money amounts are in thousands of dollars]`,
X__1,
X__3,
X__5,
X__6,
X__7,
X__8,
X__9,
X__10,
X__11,
X__12,
X__13,
X__16,
X__17,
X__18,
X__19,
X__20,
X__21,
X__22,
X__23,
X__24,
X__25,
X__26,
X__27,
X__28,
X__31,
X__32,
X__43,
X__44,
X__41,
X__42,
X__37,
X__38,
X__33,
X__34,
X__35,
X__36,
X__45,
X__46,
X__47,
X__48,
X__57,
X__58,
X__59,
X__60,
X__65,
X__66,
X__67,
X__68,
X__69,
X__70,
X__4)
View(tn_2011_df)
cols <-c (‘zip_code’,
‘agi_range’,
‘return_count’,
‘exemption_count’,
‘dependent_count’ ,
‘agi_amt’ ,
‘salary_wages_count’,
‘salary_wages_amt’,
‘taxable_interest_count’,
‘taxable_interest_amt’,
‘ordinary_dividends_count’,
‘ordinary_dividends_amt’,
‘business_income_count’,
‘business_income_amt’ ,
‘farm_income_count’ ,
‘net_capital_gain_count’,
‘net_capital_gain_amt’,
‘taxable_IRA_dist_count’,
‘taxable_IRA_dist_amt’,
‘pension_income_count’,
‘pension_income_amt’,
‘unemployment_count’,
‘unemployment_amt’,
‘social_security_count’ ,
‘social_security_amt’ ,
‘item_deduc_count’,
‘item_deduc_amt’,
‘charitable_contribution_count’ ,
‘charitable_contribution_amt’ ,
‘mortgage_int_count’,
‘mortgage_int_amt’,
‘property_tax_count’,
‘property_tax_amt’,
‘state_local_income_tax_count’,
‘state_local_income_tax_amt’,
‘state_local_sales_tax_count’ ,
‘state_local_sales_tax_amt’ ,
‘taxable_income_count’,
‘taxable_income_amt’,
‘tot_tax_credit_count’,
‘tot_tax_credit_amt’,
‘earned_income_credit_count’,
‘earned_income_credit_amt’,
‘excess_eaned_income_credit_count’,
‘excess_eaned_income_credit_amt’,
‘tax_liability_count’ ,
‘tax_liability_amt’ ,
‘balance_due_count’ ,
‘balance_due_amt’ ,
‘refund_count’,
‘refund_amt’,
‘paid_prep_count’
)
View(tn_2011)
tn_2011_df <- select(tn_2011,`[Money amounts are in thousands of dollars]`,
X__1,
X__3,
X__5,
X__6,
X__7,
X__8,
X__9,
X__10,
X__11,
X__12,
X__13,
X__16,
X__17,
X__18,
X__19,
X__20,
X__21,
X__22,
X__23,
X__24,
X__25,
X__26,
X__27,
X__28,
X__31,
X__32,
X__43,
X__44,
X__41,
X__42,
X__37,
X__38,
X__33,
X__34,
X__35,
X__36,
X__45,
X__46,
X__47,
X__48,
X__57,
X__58,
X__59,
X__60,
X__65,
X__66,
X__67,
X__68,
X__69,
X__70,
X__4)
View(tn_2011_df)
View(tn_2011_df)
cols <-c ('zip_code’,
'agi_range’,
'return_count’,
'exemption_count’,
'dependent_count’ ,
'agi_amt’ ,
'salary_wages_count’,
'salary_wages_amt’,
'taxable_interest_count’,
'taxable_interest_amt’,
'ordinary_dividends_count’,
'ordinary_dividends_amt’,
'business_income_count’,
'business_income_amt’ ,
'farm_income_count’ ,
'net_capital_gain_count’,
'net_capital_gain_amt’,
'taxable_IRA_dist_count’,
'taxable_IRA_dist_amt’,
'pension_income_count’,
'pension_income_amt’,
'unemployment_count’,
'unemployment_amt’,
'social_security_count’ ,
'social_security_amt’ ,
'item_deduc_count’,
'item_deduc_amt’,
'charitable_contribution_count’ ,
'charitable_contribution_amt’ ,
'mortgage_int_count’,
'mortgage_int_amt’,
'property_tax_count’,
'property_tax_amt’,
'state_local_income_tax_count’,
'state_local_income_tax_amt’,
'state_local_sales_tax_count’ ,
'state_local_sales_tax_amt’ ,
'taxable_income_count’,
'taxable_income_amt’,
'tot_tax_credit_count’,
'tot_tax_credit_amt’,
'earned_income_credit_count’,
'earned_income_credit_amt’,
'excess_eaned_income_credit_count’,
'excess_eaned_income_credit_amt’,
'tax_liability_count’ ,
'tax_liability_amt’ ,
'balance_due_count’ ,
'balance_due_amt’ ,
'refund_count’,
'refund_amt’,
'paid_prep_count’
)
cols <-c ('zip_code',
'agi_range',
'return_count',
'exemption_count',
'dependent_count' ,
'agi_amt' ,
'salary_wages_count',
'salary_wages_amt',
'taxable_interest_count',
'taxable_interest_amt',
'ordinary_dividends_count',
'ordinary_dividends_amt',
'business_income_count',
'business_income_amt' ,
'farm_income_count' ,
'net_capital_gain_count',
'net_capital_gain_amt',
'taxable_IRA_dist_count',
'taxable_IRA_dist_amt',
'pension_income_count',
'pension_income_amt',
'unemployment_count',
'unemployment_amt',
'social_security_count' ,
'social_security_amt' ,
'item_deduc_count',
'item_deduc_amt',
'charitable_contribution_count' ,
'charitable_contribution_amt' ,
'mortgage_int_count',
'mortgage_int_amt',
'property_tax_count',
'property_tax_amt',
'state_local_income_tax_count',
'state_local_income_tax_amt',
'state_local_sales_tax_count' ,
'state_local_sales_tax_amt' ,
'taxable_income_count',
'taxable_income_amt',
'tot_tax_credit_count',
'tot_tax_credit_amt',
'earned_income_credit_count',
'earned_income_credit_amt',
'excess_eaned_income_credit_count',
'excess_eaned_income_credit_amt',
'tax_liability_count' ,
'tax_liability_amt' ,
'balance_due_count' ,
'balance_due_amt' ,
'refund_count',
'refund_amt',
'paid_prep_count'
)
colnames(tn_2011_df) <- cols
View(tn_2011_df)
